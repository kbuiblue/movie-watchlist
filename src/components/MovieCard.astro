---
interface Props {
    src: string;
    href: string;
    title: string;
    imdbRating: string;
    runtime: string;
    genre: string;
    plot: string;
}

const { href, src, title, imdbRating, runtime, genre, plot } = Astro.props;
---

<li class="movie-card">
    <a href={href}> <img class="movie-poster" src={src} /></a>
    <div class="movie-info">
        <a href={href}>
            <div class="top-info">
                <h2>
                    {title}
                </h2>
                <img class="star-icon" src="/star-icon.svg" />
                <h2>{imdbRating}</h2>
            </div>
        </a>

        <div class="mid-info">
            <p>{runtime}</p>
            <p>{genre}</p>
            <div class="watchlist-add">
                <img src="/add-icon.svg" />
                <p>Add to Watchlist</p>
            </div>
        </div>
        <p class="plot">
            {plot}
        </p>
    </div>
</li>

<script>

    // export const MovieCard = (props: Props) => {

    //     return (
    //         <li class="movie-card">
    //             <a href={data.href}>
    //                 <img class="movie-poster" src={data.src} />
    //             </a>
    //             <div class="movie-info">
    //                 <a href={data.href}>
    //                     <div class="top-info">
    //                         <h2>{data.title}</h2>
    //                         <img class="star-icon" src="/star-icon.svg" />
    //                         <h2>{data.imdbRating}</h2>
    //                     </div>
    //                 </a>

    //                 <div class="mid-info">
    //                     <p>{data.runtime}</p>
    //                     <p>{data.genre}</p>
    //                     <div class="watchlist-add">
    //                         <img src="/add-icon.svg" />
    //                         <p>Add to Watchlist</p>
    //                     </div>
    //                 </div>
    //                 <p class="plot">{data.plot}</p>
    //             </div>
    //         </li>
    //     );
    // };
</script>

<style>
    .movie-card {
        list-style: none;
        display: grid;
        grid-template-columns: 8em 2em 1fr;
        grid-template-areas: "poster . info";
        padding: 2em 3em;
        background-color: #23262d;
        background-image: none;
        background-size: 400%;
        border-radius: 7px;
        background-position: 100%;
        box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
        user-select: none;
    }
    /* .movie-card > a {
        width: 100%;

        padding: calc(1.5rem - 1px);
        border-radius: 8px;
        background-color: #23262d;
        opacity: 0.8;
    } */

    .movie-poster {
        grid-area: poster;
        max-width: 8em;
    }

    .movie-info {
        grid-area: info;
        display: flex;
        min-height: 100%;
        flex-direction: column;
        justify-content: center;
    }

    .movie-info,
    .movie-info a {
        color: white;
        text-decoration: none;
        line-height: 1.4;
    }

    .movie-info > div {
        margin-bottom: 1em;
    }

    .top-info {
        display: flex;
        width: fit-content;
        justify-content: space-around;
        cursor: pointer;
    }

    .top-info .star-icon {
        margin: 0 0.75em;
    }

    .mid-info {
        display: flex;
        font-size: medium;
        justify-content: flex-start;
        gap: 2em;
    }

    .watchlist-add {
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 0;
        gap: 0.5em;
        cursor: pointer;
    }

    .watchlist-add:active {
        transform: scale(0.9);
        color: rgb(var(--accent-light));
    }

    .plot {
        margin: 0;
    }

    h2 {
        margin: 0;
        font-size: 1.25rem;
    }

    .movie-card:is(:hover, :focus-within) {
        box-shadow: inset 0 0 0 1px rgba(var(--accent-light), 50%);
    }
</style>
